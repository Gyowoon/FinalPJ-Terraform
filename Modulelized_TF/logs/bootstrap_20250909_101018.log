== Bootstrap started Tue, Sep  9, 2025 10:10:18 AM ==

==================== Running terraform apply =====================
[0m[1mInitializing the backend...[0m
[0m[1mUpgrading modules...[0m
- bastion in modules\BASTION
- dns in modules\DNS
- eks in modules\EKS
- rds in modules\RDS
- redis in modules\REDIS
- vpc in modules\VPC
[0m[1mInitializing provider plugins...[0m
- Finding hashicorp/aws versions matching "~> 5.0"...
- Finding hashicorp/kubernetes versions matching "~> 2.23"...
- Using previously-installed hashicorp/aws v5.100.0
- Using previously-installed hashicorp/kubernetes v2.38.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[0m[1mdata.aws_ami.bastion: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.bastion.data.aws_ami.bastion: Reading...[0m[0m
[0m[1mmodule.vpc.aws_vpc.main: Refreshing state... [id=vpc-0f01002dc010c4797][0m
[0m[1mmodule.redis.aws_elasticache_parameter_group.redis: Refreshing state... [id=my-eks-shop-cluster-redis-params][0m
[0m[1mmodule.vpc.aws_eip.nat_eip: Refreshing state... [id=eipalloc-0f1db75f28753c751][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=335507813633][0m
[0m[1mmodule.dns.aws_iam_role.external_dns: Refreshing state... [id=external-dns-pod-identity-role-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.bastion.aws_iam_role.bastion: Refreshing state... [id=bastion-role-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.dns.aws_iam_policy.external_dns: Refreshing state... [id=arn:aws:iam::335507813633:policy/external-dns-route53-policy-335507813633-my-eks-shop-cluster][0m
[0m[1mdata.aws_ami.bastion: Read complete after 1s [id=ami-0ae2c887094315bed][0m
[0m[1mmodule.bastion.data.aws_ami.bastion: Read complete after 1s [id=ami-068d7b3dd93d9c2a6][0m
[0m[1mmodule.vpc.aws_internet_gateway.igw: Refreshing state... [id=igw-0e5181c15c62846dd][0m
[0m[1mmodule.vpc.aws_subnet.private2: Refreshing state... [id=subnet-0b539bfe5869b67f8][0m
[0m[1mmodule.vpc.aws_subnet.private1: Refreshing state... [id=subnet-0baacecc2ecd21547][0m
[0m[1mmodule.vpc.aws_subnet.public2: Refreshing state... [id=subnet-0ebd02cda259e72d5][0m
[0m[1mmodule.vpc.aws_subnet.public1: Refreshing state... [id=subnet-0fc3462a545a1041d][0m
[0m[1maws_security_group.bastion: Refreshing state... [id=sg-0833ba59249d9714e][0m
[0m[1mmodule.bastion.aws_security_group.bastion: Refreshing state... [id=sg-0c2ad7e58e7ac58a9][0m
[0m[1mmodule.redis.aws_security_group.redis: Refreshing state... [id=sg-08dd492efd4d3130a][0m
[0m[1mmodule.rds.aws_security_group.db: Refreshing state... [id=sg-038e19791877a2518][0m
[0m[1mmodule.vpc.aws_route_table.public: Refreshing state... [id=rtb-095273ac8a96176ac][0m
[0m[1mmodule.redis.aws_elasticache_subnet_group.redis: Refreshing state... [id=my-eks-shop-cluster-redis-subnet-group][0m
[0m[1mmodule.rds.aws_db_subnet_group.db: Refreshing state... [id=my-eks-shop-cluster-db-subnet-group][0m
[0m[1mmodule.vpc.aws_route_table_association.public2: Refreshing state... [id=rtbassoc-09325d97ceeba47cf][0m
[0m[1mmodule.vpc.aws_route_table_association.public1: Refreshing state... [id=rtbassoc-066bd064f99d2da3b][0m
[0m[1mmodule.vpc.aws_nat_gateway.nat: Refreshing state... [id=nat-073ea2b1671d2581e][0m
[0m[1mmodule.vpc.aws_route_table.private: Refreshing state... [id=rtb-0cc039baa7fd7cb2a][0m
[0m[1mmodule.rds.aws_db_instance.db: Refreshing state... [id=db-LBRKWC7AXVYCOOUQMJSCFJA7VE][0m
[0m[1mmodule.dns.aws_iam_role_policy_attachment.external_dns_attach: Refreshing state... [id=external-dns-pod-identity-role-335507813633-my-eks-shop-cluster-20250909005943804700000002][0m
[0m[1mmodule.vpc.aws_route_table_association.private1: Refreshing state... [id=rtbassoc-00aebced3ead895c5][0m
[0m[1mmodule.vpc.aws_route_table_association.private2: Refreshing state... [id=rtbassoc-0cae7777f4c26d464][0m
[0m[1mmodule.bastion.aws_iam_role_policy.bastion: Refreshing state... [id=bastion-role-335507813633-my-eks-shop-cluster:bastion-policy-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.bastion.aws_iam_instance_profile.bastion: Refreshing state... [id=bastion-profile-335507813633-my-eks-shop-cluster][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # data.aws_eks_cluster.eks[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_eks_cluster" "eks" {
      [32m+[0m[0m access_config             = (known after apply)
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m certificate_authority     = (known after apply)
      [32m+[0m[0m cluster_id                = (known after apply)
      [32m+[0m[0m compute_config            = (known after apply)
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m enabled_cluster_log_types = (known after apply)
      [32m+[0m[0m endpoint                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m identity                  = (known after apply)
      [32m+[0m[0m kubernetes_network_config = (known after apply)
      [32m+[0m[0m name                      = (known after apply)
      [32m+[0m[0m outpost_config            = (known after apply)
      [32m+[0m[0m platform_version          = (known after apply)
      [32m+[0m[0m remote_network_config     = (known after apply)
      [32m+[0m[0m role_arn                  = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m storage_config            = (known after apply)
      [32m+[0m[0m tags                      = (known after apply)
      [32m+[0m[0m upgrade_policy            = (known after apply)
      [32m+[0m[0m version                   = (known after apply)
      [32m+[0m[0m vpc_config                = (known after apply)
      [32m+[0m[0m zonal_shift_config        = (known after apply)
    }

[1m  # data.aws_eks_cluster_auth.eks[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_eks_cluster_auth" "eks" {
      [32m+[0m[0m id    = (known after apply)
      [32m+[0m[0m name  = (known after apply)
      [32m+[0m[0m token = (sensitive value)
    }

[1m  # aws_ecr_repository.shop_backend[0m will be created
[0m  [32m+[0m[0m resource "aws_ecr_repository" "shop_backend" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m image_tag_mutability = "MUTABLE"
      [32m+[0m[0m name                 = "shop-backend"
      [32m+[0m[0m registry_id          = (known after apply)
      [32m+[0m[0m repository_url       = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "shop-backend"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name" = "shop-backend"
        }

      [32m+[0m[0m image_scanning_configuration {
          [32m+[0m[0m scan_on_push = true
        }
    }

[1m  # aws_ecr_repository.shop_frontend[0m will be created
[0m  [32m+[0m[0m resource "aws_ecr_repository" "shop_frontend" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m image_tag_mutability = "MUTABLE"
      [32m+[0m[0m name                 = "shop-frontend"
      [32m+[0m[0m registry_id          = (known after apply)
      [32m+[0m[0m repository_url       = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "shop-frontend"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name" = "shop-frontend"
        }

      [32m+[0m[0m image_scanning_configuration {
          [32m+[0m[0m scan_on_push = true
        }
    }

[1m  # aws_eks_access_entry.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_access_entry" "bastion" {
      [32m+[0m[0m access_entry_arn  = (known after apply)
      [32m+[0m[0m cluster_name      = (known after apply)
      [32m+[0m[0m created_at        = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m kubernetes_groups = [
          [32m+[0m[0m "eks-admins",
        ]
      [32m+[0m[0m modified_at       = (known after apply)
      [32m+[0m[0m principal_arn     = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)
      [32m+[0m[0m type              = "EC2"
      [32m+[0m[0m user_name         = (known after apply)
    }

[1m  # aws_iam_instance_profile.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "bastion" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "my-eks-shop-cluster-bastion-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "my-eks-shop-cluster-bastion-role"
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_role.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "bastion" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "my-eks-shop-cluster-bastion-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # aws_iam_role_policy_attachment.bastion_policies["admin"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "bastion_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AdministratorAccess"
      [32m+[0m[0m role       = "my-eks-shop-cluster-bastion-role"
    }

[1m  # aws_instance.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion" {
      [32m+[0m[0m ami                                  = "ami-0ae2c887094315bed"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "my-eks-shop-cluster-bastion-profile"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t3.large"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "LetMeIn"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-0fc3462a545a1041d"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "my-eks-shop-cluster-bastion"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "my-eks-shop-cluster-bastion"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "b6cee04d9df13814e9c4f22782647d2a4a812330"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = (known after apply)
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = (known after apply)
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 30
          [32m+[0m[0m volume_type           = "gp3"
        }
    }

[1m  # kubernetes_cluster_role_binding.bastion_admin[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_cluster_role_binding" "bastion_admin" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "bastion-admin-binding"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m role_ref {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "ClusterRole"
          [32m+[0m[0m name      = "cluster-admin"
        }

      [32m+[0m[0m subject {
          [32m+[0m[0m api_group = "rbac.authorization.k8s.io"
          [32m+[0m[0m kind      = "Group"
          [32m+[0m[0m name      = "eks-admins"
          [32m+[0m[0m namespace = "default"
        }
    }

[1m  # module.bastion.aws_eks_access_entry.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_access_entry" "bastion" {
      [32m+[0m[0m access_entry_arn  = (known after apply)
      [32m+[0m[0m cluster_name      = "my-eks-shop-cluster"
      [32m+[0m[0m created_at        = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m kubernetes_groups = [
          [32m+[0m[0m "eks-admins",
        ]
      [32m+[0m[0m modified_at       = (known after apply)
      [32m+[0m[0m principal_arn     = "arn:aws:iam::335507813633:role/bastion-role-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m tags_all          = (known after apply)
      [32m+[0m[0m type              = "EC2"
      [32m+[0m[0m user_name         = (known after apply)
    }

[1m  # module.bastion.aws_instance.bastion[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion" {
      [32m+[0m[0m ami                                  = "ami-068d7b3dd93d9c2a6"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "bastion-profile-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t3.large"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "LetMeIn"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-0fc3462a545a1041d"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "my-eks-shop-cluster-bastion"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "my-eks-shop-cluster-bastion"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "54aa17086219072d461ec98815d5643b7f339f90"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = (known after apply)
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = (known after apply)
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 30
          [32m+[0m[0m volume_type           = "gp3"
        }
    }

[1m  # module.dns.aws_eks_pod_identity_association.external_dns[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_pod_identity_association" "external_dns" {
      [32m+[0m[0m association_arn = (known after apply)
      [32m+[0m[0m association_id  = (known after apply)
      [32m+[0m[0m cluster_name    = "my-eks-shop-cluster"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m namespace       = "kube-system"
      [32m+[0m[0m role_arn        = "arn:aws:iam::335507813633:role/external-dns-pod-identity-role-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m service_account = "external-dns"
      [32m+[0m[0m tags_all        = {}
    }

[1m  # module.eks.aws_eks_addon.coredns[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "coredns" {
      [32m+[0m[0m addon_name           = "coredns"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "my-eks-shop-cluster"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks.aws_eks_addon.kube_proxy[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "kube_proxy" {
      [32m+[0m[0m addon_name           = "kube-proxy"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "my-eks-shop-cluster"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks.aws_eks_addon.pod_identity_agent[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "pod_identity_agent" {
      [32m+[0m[0m addon_name           = "eks-pod-identity-agent"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "my-eks-shop-cluster"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks.aws_eks_addon.vpc_cni[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_addon" "vpc_cni" {
      [32m+[0m[0m addon_name           = "vpc-cni"
      [32m+[0m[0m addon_version        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m cluster_name         = "my-eks-shop-cluster"
      [32m+[0m[0m configuration_values = (known after apply)
      [32m+[0m[0m created_at           = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m modified_at          = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.eks.aws_eks_cluster.eks[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_cluster" "eks" {
      [32m+[0m[0m arn                           = (known after apply)
      [32m+[0m[0m bootstrap_self_managed_addons = true
      [32m+[0m[0m certificate_authority         = (known after apply)
      [32m+[0m[0m cluster_id                    = (known after apply)
      [32m+[0m[0m created_at                    = (known after apply)
      [32m+[0m[0m endpoint                      = (known after apply)
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m identity                      = (known after apply)
      [32m+[0m[0m name                          = "my-eks-shop-cluster"
      [32m+[0m[0m platform_version              = (known after apply)
      [32m+[0m[0m role_arn                      = (known after apply)
      [32m+[0m[0m status                        = (known after apply)
      [32m+[0m[0m tags_all                      = (known after apply)
      [32m+[0m[0m version                       = "1.28"

      [32m+[0m[0m access_config {
          [32m+[0m[0m authentication_mode                         = "API"
          [32m+[0m[0m bootstrap_cluster_creator_admin_permissions = true
        }

      [32m+[0m[0m kubernetes_network_config (known after apply)

      [32m+[0m[0m upgrade_policy (known after apply)

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m cluster_security_group_id = (known after apply)
          [32m+[0m[0m endpoint_private_access   = true
          [32m+[0m[0m endpoint_public_access    = true
          [32m+[0m[0m public_access_cidrs       = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m subnet_ids                = [
              [32m+[0m[0m "subnet-0b539bfe5869b67f8",
              [32m+[0m[0m "subnet-0baacecc2ecd21547",
              [32m+[0m[0m "subnet-0ebd02cda259e72d5",
              [32m+[0m[0m "subnet-0fc3462a545a1041d",
            ]
          [32m+[0m[0m vpc_id                    = (known after apply)
        }
    }

[1m  # module.eks.aws_eks_node_group.nodes[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_node_group" "nodes" {
      [32m+[0m[0m ami_type               = "AL2023_x86_64_STANDARD"
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m capacity_type          = "ON_DEMAND"
      [32m+[0m[0m cluster_name           = "my-eks-shop-cluster"
      [32m+[0m[0m disk_size              = 20
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_types         = [
          [32m+[0m[0m "m7i-flex.large",
        ]
      [32m+[0m[0m node_group_name        = "YourEKSNodeGroups"
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [32m+[0m[0m node_role_arn          = (known after apply)
      [32m+[0m[0m release_version        = (known after apply)
      [32m+[0m[0m resources              = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m subnet_ids             = [
          [32m+[0m[0m "subnet-0b539bfe5869b67f8",
          [32m+[0m[0m "subnet-0baacecc2ecd21547",
          [32m+[0m[0m "subnet-0ebd02cda259e72d5",
          [32m+[0m[0m "subnet-0fc3462a545a1041d",
        ]
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m version                = (known after apply)

      [32m+[0m[0m node_repair_config (known after apply)

      [32m+[0m[0m remote_access {
          [32m+[0m[0m ec2_ssh_key = "LetMeIn"
        }

      [32m+[0m[0m scaling_config {
          [32m+[0m[0m desired_size = 4
          [32m+[0m[0m max_size     = 4
          [32m+[0m[0m min_size     = 4
        }

      [32m+[0m[0m update_config (known after apply)
    }

[1m  # module.eks.aws_eks_pod_identity_association.shopping_mall[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_pod_identity_association" "shopping_mall" {
      [32m+[0m[0m association_arn = (known after apply)
      [32m+[0m[0m association_id  = (known after apply)
      [32m+[0m[0m cluster_name    = "my-eks-shop-cluster"
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m namespace       = "shop"
      [32m+[0m[0m role_arn        = (known after apply)
      [32m+[0m[0m service_account = "shopping-mall-sa"
      [32m+[0m[0m tags_all        = {}
    }

[1m  # module.eks.aws_iam_role.eks_cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_cluster" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "sts:AssumeRole",
                          [32m+[0m[0m "sts:TagSession",
                        ]
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "YourEKSClusterRole-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks.aws_iam_role.eks_node[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "eks_node" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "YourEKSNodeRole-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks.aws_iam_role.shopping_mall_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "shopping_mall_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "sts:AssumeRole",
                          [32m+[0m[0m "sts:TagSession",
                        ]
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "pods.eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ShoppingMallPodRole-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy.shopping_mall_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "shopping_mall_policy" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "ShoppingMallPolicy-335507813633-my-eks-shop-cluster"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "rds:DescribeDBInstances",
                          [32m+[0m[0m "rds:DescribeDBClusters",
                          [32m+[0m[0m "rds:Connect",
                          [32m+[0m[0m "elasticache:DescribeCacheClusters",
                          [32m+[0m[0m "elasticache:DescribeReplicationGroups",
                          [32m+[0m[0m "elasticache:Connect",
                          [32m+[0m[0m "s3:GetObject",
                          [32m+[0m[0m "s3:PutObject",
                          [32m+[0m[0m "s3:DeleteObject",
                          [32m+[0m[0m "s3:ListBucket",
                          [32m+[0m[0m "secretsmanager:GetSecretValue",
                          [32m+[0m[0m "secretsmanager:DescribeSecret",
                          [32m+[0m[0m "logs:CreateLogGroup",
                          [32m+[0m[0m "logs:CreateLogStream",
                          [32m+[0m[0m "logs:PutLogEvents",
                          [32m+[0m[0m "logs:DescribeLogGroups",
                          [32m+[0m[0m "logs:DescribeLogStreams",
                          [32m+[0m[0m "ssm:GetParameter",
                          [32m+[0m[0m "ssm:GetParameters",
                          [32m+[0m[0m "ssm:GetParametersByPath",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role        = (known after apply)
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_policies[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSBlockStoragePolicy"
      [32m+[0m[0m role       = "YourEKSClusterRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_policies[1][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m[0m role       = "YourEKSClusterRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_policies[2][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSComputePolicy"
      [32m+[0m[0m role       = "YourEKSClusterRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_policies[3][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSLoadBalancingPolicy"
      [32m+[0m[0m role       = "YourEKSClusterRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.cluster_policies[4][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "cluster_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSNetworkingPolicy"
      [32m+[0m[0m role       = "YourEKSClusterRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.node_policies[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m[0m role       = "YourEKSNodeRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.node_policies[1][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "YourEKSNodeRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.node_policies[2][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_policies" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m[0m role       = "YourEKSNodeRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.shopping_mall_ecr_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "shopping_mall_ecr_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "ShoppingMallPodRole-335507813633-my-eks-shop-cluster"
    }

[1m  # module.eks.kubernetes_namespace.shop[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_namespace" "shop" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m wait_for_default_service_account = false

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "shop"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.eks.kubernetes_service_account.shopping_mall[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_service_account" "shopping_mall" {
      [32m+[0m[0m automount_service_account_token = true
      [32m+[0m[0m default_secret_name             = (known after apply)
      [32m+[0m[0m id                              = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "shopping-mall-sa"
          [32m+[0m[0m namespace        = "shop"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.redis.aws_elasticache_cluster.redis[0m will be created
[0m  [32m+[0m[0m resource "aws_elasticache_cluster" "redis" {
      [32m+[0m[0m apply_immediately          = (known after apply)
      [32m+[0m[0m arn                        = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade = "true"
      [32m+[0m[0m availability_zone          = (known after apply)
      [32m+[0m[0m az_mode                    = (known after apply)
      [32m+[0m[0m cache_nodes                = (known after apply)
      [32m+[0m[0m cluster_address            = (known after apply)
      [32m+[0m[0m cluster_id                 = "my-eks-shop-cluster-redis"
      [32m+[0m[0m configuration_endpoint     = (known after apply)
      [32m+[0m[0m engine                     = "redis"
      [32m+[0m[0m engine_version             = "7.0"
      [32m+[0m[0m engine_version_actual      = (known after apply)
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m ip_discovery               = (known after apply)
      [32m+[0m[0m maintenance_window         = "sun:05:00-sun:06:00"
      [32m+[0m[0m network_type               = (known after apply)
      [32m+[0m[0m node_type                  = "cache.t3.micro"
      [32m+[0m[0m num_cache_nodes            = 1
      [32m+[0m[0m parameter_group_name       = "my-eks-shop-cluster-redis-params"
      [32m+[0m[0m port                       = 6379
      [32m+[0m[0m preferred_outpost_arn      = (known after apply)
      [32m+[0m[0m replication_group_id       = (known after apply)
      [32m+[0m[0m security_group_ids         = [
          [32m+[0m[0m "sg-08dd492efd4d3130a",
        ]
      [32m+[0m[0m snapshot_retention_limit   = 7
      [32m+[0m[0m snapshot_window            = "04:00-05:00"
      [32m+[0m[0m subnet_group_name          = "my-eks-shop-cluster-redis-subnet-group"
      [32m+[0m[0m tags                       = {
          [32m+[0m[0m "Name" = "my-eks-shop-cluster-redis"
        }
      [32m+[0m[0m tags_all                   = {
          [32m+[0m[0m "Name" = "my-eks-shop-cluster-redis"
        }
      [32m+[0m[0m transit_encryption_enabled = (known after apply)
    }

[1mPlan:[0m 34 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m bastion_dns            = (known after apply)
  [32m+[0m[0m bastion_public_ip      = (known after apply)
  [32m+[0m[0m cluster_endpoint       = (known after apply)
  [32m+[0m[0m cluster_id             = (known after apply)
  [32m+[0m[0m redis_endpoint         = (known after apply)
  [32m+[0m[0m shopping_mall_role_arn = (known after apply)
[0m[1mmodule.bastion.aws_eks_access_entry.bastion: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.eks_node: Creating...[0m[0m
[0m[1maws_ecr_repository.shop_frontend: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.shopping_mall_role: Creating...[0m[0m
[0m[1maws_ecr_repository.shop_backend: Creating...[0m[0m
[0m[1maws_iam_role.bastion: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.eks_cluster: Creating...[0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Creating...[0m[0m
[0m[1mmodule.dns.aws_eks_pod_identity_association.external_dns: Creating...[0m[0m
[0m[1maws_iam_role.bastion: Creation complete after 2s [id=my-eks-shop-cluster-bastion-role][0m
[0m[1maws_iam_role_policy_attachment.bastion_policies["admin"]: Creating...[0m[0m
[0m[1maws_iam_instance_profile.bastion: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.eks_node: Creation complete after 2s [id=YourEKSNodeRole-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_policies[2]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_policies[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_policies[1]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.shopping_mall_role: Creation complete after 2s [id=ShoppingMallPodRole-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.shopping_mall_ecr_policy: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy.shopping_mall_policy: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role.eks_cluster: Creation complete after 2s [id=YourEKSClusterRole-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[2]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[0]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[4]: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.bastion_policies["admin"]: Creation complete after 1s [id=my-eks-shop-cluster-bastion-role-20250909011040105600000002][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[1]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_policies[0]: Creation complete after 1s [id=YourEKSNodeRole-335507813633-my-eks-shop-cluster-20250909011040116500000003][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_policies[2]: Creation complete after 1s [id=YourEKSNodeRole-335507813633-my-eks-shop-cluster-20250909011040172500000004][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[3]: Creating...[0m[0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_policies[1]: Creation complete after 1s [id=YourEKSNodeRole-335507813633-my-eks-shop-cluster-20250909011040333400000005][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.shopping_mall_ecr_policy: Creation complete after 1s [id=ShoppingMallPodRole-335507813633-my-eks-shop-cluster-20250909011040377100000006][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[0]: Creation complete after 1s [id=YourEKSClusterRole-335507813633-my-eks-shop-cluster-20250909011040448500000007][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[2]: Creation complete after 1s [id=YourEKSClusterRole-335507813633-my-eks-shop-cluster-20250909011040616400000008][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[4]: Creation complete after 1s [id=YourEKSClusterRole-335507813633-my-eks-shop-cluster-20250909011040658100000009][0m
[0m[1mmodule.eks.aws_iam_role_policy.shopping_mall_policy: Creation complete after 1s [id=ShoppingMallPodRole-335507813633-my-eks-shop-cluster:ShoppingMallPolicy-335507813633-my-eks-shop-cluster][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[1]: Creation complete after 0s [id=YourEKSClusterRole-335507813633-my-eks-shop-cluster-2025090901104088920000000a][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_policies[3]: Creation complete after 0s [id=YourEKSClusterRole-335507813633-my-eks-shop-cluster-2025090901104121370000000b][0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Creating...[0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [02m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [02m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [03m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [03m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [03m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [03m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [03m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [03m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [03m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [03m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [03m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [03m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [03m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [03m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [04m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [04m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [04m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [04m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [04m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [04m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [04m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [04m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [04m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [04m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [04m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [04m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [05m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [05m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [05m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [05m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [05m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [05m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [05m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [05m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [05m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [05m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [05m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [05m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [06m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [06m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [06m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [06m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [06m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [06m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [06m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [06m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [06m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [06m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [06m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [06m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [07m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [07m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [07m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [07m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [07m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [07m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [07m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [07m30s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [07m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [07m40s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [07m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [07m50s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [08m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [08m00s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [08m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [08m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [08m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [08m20s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [08m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [08m31s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [08m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [08m41s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [08m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [08m51s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [09m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [09m01s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [09m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [09m11s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [09m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [09m21s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [09m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [09m31s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [09m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Still creating... [09m41s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_cluster.eks: Creation complete after 9m46s [id=my-eks-shop-cluster][0m
[0m[1mdata.aws_eks_cluster_auth.eks: Reading...[0m[0m
[0m[1mdata.aws_eks_cluster.eks: Reading...[0m[0m
[0m[1mdata.aws_eks_cluster_auth.eks: Read complete after 0s [id=my-eks-shop-cluster][0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Creating...[0m[0m
[0m[1maws_eks_access_entry.bastion: Creating...[0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Creating...[0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Creating...[0m[0m
[0m[1mmodule.bastion.aws_instance.bastion: Creating...[0m[0m
[0m[1mdata.aws_eks_cluster.eks: Read complete after 1s [id=my-eks-shop-cluster][0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [09m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.bastion.aws_instance.bastion: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Still creating... [10m00s elapsed][0m[0m
[0m[1mmodule.bastion.aws_instance.bastion: Creation complete after 13s [id=i-03e7ff430137cc436][0m
[0m[1mmodule.redis.aws_elasticache_cluster.redis: Creation complete after 10m8s [id=my-eks-shop-cluster-redis][0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.vpc_cni: Creation complete after 2m37s [id=my-eks-shop-cluster:vpc-cni][0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.pod_identity_agent: Creation complete after 2m47s [id=my-eks-shop-cluster:eks-pod-identity-agent][0m
[0m[1mmodule.eks.aws_eks_addon.kube_proxy: Creation complete after 2m47s [id=my-eks-shop-cluster:kube-proxy][0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Creating...[0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_node_group.nodes: Creation complete after 2m18s [id=my-eks-shop-cluster:YourEKSNodeGroups][0m
[0m[1mmodule.eks.aws_eks_addon.coredns: Creating...[0m[0m
[0m[1mmodule.eks.aws_eks_addon.coredns: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.eks.aws_eks_addon.coredns: Creation complete after 14s [id=my-eks-shop-cluster:coredns][0m
[0m[1mmodule.eks.kubernetes_namespace.shop: Creating...[0m[0m
[0m[1mmodule.eks.kubernetes_namespace.shop: Creation complete after 2s [id=shop][0m
[0m[1mmodule.eks.kubernetes_service_account.shopping_mall: Creating...[0m[0m
[0m[1mmodule.eks.kubernetes_service_account.shopping_mall: Creation complete after 0s [id=shop/shopping-mall-sa][0m
[0m[1mmodule.eks.aws_eks_pod_identity_association.shopping_mall: Creating...[0m[0m
[0m[1mmodule.eks.aws_eks_pod_identity_association.shopping_mall: Creation complete after 1s [id=a-90idhlfet1wps08vr][0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating IAM Instance Profile (my-eks-shop-cluster-bastion-profile): operation error IAM: CreateInstanceProfile, https response error StatusCode: 409, RequestID: 02246b48-685f-409c-9019-c8be217ba39f, EntityAlreadyExists: Instance Profile my-eks-shop-cluster-bastion-profile already exists.[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with aws_iam_instance_profile.bastion,
[31m│[0m [0m  on main-bastion-setting.tf line 43, in resource "aws_iam_instance_profile" "bastion":
[31m│[0m [0m  43: resource "aws_iam_instance_profile" "bastion" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating EKS Access Entry (my-eks-shop-cluster:arn:aws:iam::335507813633:role/my-eks-shop-cluster-bastion-role): operation error EKS: CreateAccessEntry, https response error StatusCode: 400, RequestID: b2f94187-0e77-4a6a-9b13-90f29a86b274, InvalidParameterException: The specified kubernetesGroups is invalid: setting kubernetesGroups is not allowed when the type is "EC2".[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with aws_eks_access_entry.bastion,
[31m│[0m [0m  on main-bastion-setting.tf line 55, in resource "aws_eks_access_entry" "bastion":
[31m│[0m [0m  55: resource "aws_eks_access_entry" "bastion" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating ECR Repository (shop-backend): operation error ECR: CreateRepository, https response error StatusCode: 400, RequestID: 10f144e8-8ea6-422b-a2aa-7588ab34576e, RepositoryAlreadyExistsException: The repository with name 'shop-backend' already exists in the registry with id '335507813633'[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with aws_ecr_repository.shop_backend,
[31m│[0m [0m  on main-bastion-setting.tf line 65, in resource "aws_ecr_repository" "shop_backend":
[31m│[0m [0m  65: resource "aws_ecr_repository" "shop_backend" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating ECR Repository (shop-frontend): operation error ECR: CreateRepository, https response error StatusCode: 400, RequestID: da5dcf30-5b18-4ca3-83eb-09c56e8fc5d5, RepositoryAlreadyExistsException: The repository with name 'shop-frontend' already exists in the registry with id '335507813633'[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with aws_ecr_repository.shop_frontend,
[31m│[0m [0m  on main-bastion-setting.tf line 75, in resource "aws_ecr_repository" "shop_frontend":
[31m│[0m [0m  75: resource "aws_ecr_repository" "shop_frontend" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating EKS Access Entry (my-eks-shop-cluster:arn:aws:iam::335507813633:role/bastion-role-335507813633-my-eks-shop-cluster): operation error EKS: CreateAccessEntry, https response error StatusCode: 404, RequestID: 8298467d-fd57-49b4-9cc3-5286e27e8450, ResourceNotFoundException: No cluster found for name: my-eks-shop-cluster.[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with module.bastion.aws_eks_access_entry.bastion,
[31m│[0m [0m  on modules\BASTION\main.tf line 168, in resource "aws_eks_access_entry" "bastion":
[31m│[0m [0m 168: resource "aws_eks_access_entry" "bastion" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating AWS EKS (Elastic Kubernetes) Pod Identity Association (<unknown>): operation error EKS: CreatePodIdentityAssociation, https response error StatusCode: 404, RequestID: 51883dc1-b11a-49c3-86d8-7c44dd7242b0, ResourceNotFoundException: No cluster found for name: my-eks-shop-cluster.[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with module.dns.aws_eks_pod_identity_association.external_dns,
[31m│[0m [0m  on modules\DNS\main.tf line 66, in resource "aws_eks_pod_identity_association" "external_dns":
[31m│[0m [0m  66: resource "aws_eks_pod_identity_association" "external_dns" [4m{[0m[0m
[31m│[0m [0m
[31m│[0m [0moperation error EKS: CreatePodIdentityAssociation, https response error
[31m│[0m [0mStatusCode: 404, RequestID: 51883dc1-b11a-49c3-86d8-7c44dd7242b0,
[31m│[0m [0mResourceNotFoundException: No cluster found for name: my-eks-shop-cluster.
[31m╵[0m[0m

❌ ERROR: line 147 while running: terraform -chdir="$TF_DIR" apply -auto-approve (exit=1)
👉 Full log: ./logs/bootstrap_20250909_101018.log
Dropping you into interactive shell (type: exit to quit)
